image: markussh/bsv_riscv-gcc:latest

variables:
  XILINX_VIVADO: "/opt/cad/xilinx/vitis/Vivado/2020.2"
  XILINX_LICENSE_FILE: "/opt/cad/keys/xilinx"

stages:
  - deps
  - build
  - isa
  - embench

before_script:
  # Vivado
  - export PATH="${XILINX_VIVADO}/bin:${PATH}:/opt/bsc/bin"
  - export LC_ALL=C
  
  # cloning submodules
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.esa.informatik.tu-darmstadt.de/".insteadOf "https://gitlab.esa.informatik.tu-darmstadt.de/"
  - git submodule deinit -f .
  - git submodule sync
  - git submodule update --init --recursive

deps:
  stage: deps
  script:

  # BSV tools
  - pushd core
  - /opt/bsvtools/bsvAdd.py
  - popd
  
  # Build ISA testbench
  - pushd tools/riscv-tests
  - cp -r ../riscv-tests-override/* .
  - ls
  - ./configure
  - make install BUS=128
  - popd

  # Build embench
  - pushd tools/embench
  - pushd embench-iot
  - git reset --hard HEAD
  - popd
  - make patch
  - make
  - make install
  - popd
  
  artifacts:
    paths:
      - core/.bsv_tools
      - testPrograms/*

buildSimple:
  stage: build
  script:
  - |
    cp testConfigs/simple.bsv core/src/Config.bsv
    cd core
    make SIM_TYPE=VERILOG ip
    
buildMedium:
  stage: build
  script:
  - |
    cp testConfigs/medium.bsv core/src/Config.bsv
    cd core
    make SIM_TYPE=VERILOG ip
    
buildHigh:
  stage: build
  script:
  - |
    cp testConfigs/high.bsv core/src/Config.bsv
    cd core
    make SIM_TYPE=VERILOG ip

run_isaTb_simple:
  stage: isa
  script:
    - cp testConfigs/simple.bsv core/src/Config.bsv
    - pushd core
    - make TB=ISA_TB
    - popd
    
run_isaTb_medium:
  stage: isa
  script:
    - cp testConfigs/medium.bsv core/src/Config.bsv
    - pushd core
    - make TB=ISA_TB
    - popd
    
run_isaTb_high:
  stage: isa
  script:
    - cp testConfigs/high.bsv core/src/Config.bsv
    - pushd core
    - make TB=ISA_TB
    - popd

run_embenchTb_simple:
  stage: embench
  timeout: 3h
  script:
    - cp testConfigs/simple.bsv core/src/Config.bsv
    - pushd core
    - make TB=EMBENCH_TB
    - popd
    
run_embenchTb_medium:
  stage: embench
  timeout: 3h
  script:
    - cp testConfigs/medium.bsv core/src/Config.bsv
    - pushd core
    - make TB=EMBENCH_TB
    - popd
    
run_embenchTb_high:
  stage: embench
  timeout: 3h
  script:
    - cp testConfigs/high.bsv core/src/Config.bsv
    - pushd core
    - make TB=EMBENCH_TB
    - popd
